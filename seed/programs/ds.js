const ds = {"id":15,"name":"Data Science","code":"DS","mission":"In this program, students will be trained in mathematics, natural sciences and computer science in a practical and application-oriented manner, qualifying them for independent work as computer scientists. During their studies, students acquire knowledge and skills in the fields of mathematical and scientific fundamentals as well as theoretical and applied computer science.\r\nTheir special field is Data Science. They acquire a deep understanding of data analysis and data preparation, the handling of Big Data as well as machine learning and deep learning. On completing the Bachelor of Science (B.Sc.) degree program, graduates will have acquired the professional qualification necessary for research, development, project steering and project management tasks, as well as service and consulting activities in the IT sector and its diverse application domains.","degree":"Bachelor","ects":240,"url":"http://module-handbook.herokuapp.com/programs/15.json","courses":[{"semester":1,"required":"mandatory","code":"CS_1_CALC","name":"Calculus 1","mission":"Calculus 1 is a mathematics course that teaches students about functions and rates of change and it is essential to the study of computer science. Also, questions that can be handled using analytical methods, occur in many IT applications. Confidently mastering these basic approaches of thinking and method is an indispensable condition for any activity in the field of computer science.","ects":8,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Elementary functions: rational functions, trigonometric functions, exponential function, hyperbolic functions (and their inverse functions)\r\n- Limits of sequences of numbers and limits of functions\r\n- Continuity of functions\r\n- Differential calculus: derivation rules, higher derivatives, rule of Bernoulli l'Hospital, extreme value problems\r\n- Complex numbers","prerequisites":"","literature":"- Spivak, Michael: Calculus. Cambridge, 1967.\r\n- https://openstax.org/subjects/math\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Tutorial","skills_knowledge_understanding":"","skills_intellectual":"- Argue logically confidently\r\n- Comprehend abstract tasks and break them down into individual tasks\r\n- Develop mathematical models for simple application problems \r\n","skills_practical":"- Use functions in order to describe and analyse mathematical relationships\r\n- Work on application problems using methods of differential calculus\r\n","skills_general":"- Collaborate with other students in small groups so as to find solutions for abstract and practical tasks \r\n- Assess their own skills in analysing problems and in devising solutions\r\n","created_at":"2020-08-10T09:56:55.769Z","updated_at":"2020-12-01T09:31:17.058Z","lectureHrs":"2.0","labHrs":"3.0","tutorialHrs":"3.0","equipment":"","room":""},{"semester":1,"required":"mandatory","code":"-NJF-","name":"English 1","mission":"","ects":3,"examination":"","objectives":"","contents":"","prerequisites":"","literature":"","methods":"","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T10:00:47.180Z","updated_at":"2020-11-20T09:16:31.586Z","lectureHrs":"3.0","labHrs":"0.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":1,"required":"mandatory","code":"CS_1_GER1\r\n","name":"German 1","mission":"Despite the computer science working environment being focused on English, computer scientists and students in Germany need to be able to communicate with their working and research environment in German. Therefore, several modules cover basic and lower intermediate levels of German as well as technical German to enable students to perform effectively and interact with their environment.","ects":2,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"The module \"German 1\" consists of two consecutive courses (\"Deutsch als Fremdsprache Grundstufe 1\" and \"Deutsch als Fremdsprache Grundstufe 2\"), after completing both courses: \r\n\r\n- The students can understand and use simple terms\r\n- The students are qualified to introduce themselves and others\r\n- The students ask and answer questions about others\r\n- The students can have simple communications if the dialogue partners speak loud and clear\r\n- The students indicate quantities and purchase goods\r\n- The students describe places and understand directions\r\n- The students can tell the time and ask for it\r\n\r\nThe module \"German 1\" correlates with level A1 of the Common European Framework for Languages.","contents":"***Culture***\r\n\r\n- Cultural impressions\r\n- Special places \r\n- Famous festivities\r\n\r\n***Language***\r\n\r\n- Conversations with others (introduction, welcome)\r\n- Information about yourself (job, residence, nationality)\r\n- Ask for information of others \r\n- Information about friends and family (relations, appearance)\r\n- Name, order, buy and rate food\r\n- Office environment (technology, computer, telephone)\r\n- On trip (hotel reservation, weather, complaints)\r\n- Spare time and dates (planning, reporting)\r\n- The past (experiences, newspaper)\r\n- Information on residence and surrounding area (directions, establishment, rooms)\r\n- Rules of daily life (traffic, environment)\r\n- Information on Clothing (describe, rate, buy, compare)\r\n- Information on health and body (body parts, nutrition, medical condition)\r\n- Spelling, count up to 1.000.000, colour, weekday, month, season \r\n\r\n- **Important:** \r\nIn order to complete the module, both partial courses \"Grundstufe 1\" and \"Grundstufe 2\" have to be completed succesfully. ","prerequisites":"","literature":"- Menschen A1. Hueber, 2013. (Kursbuch)\r\n- Menschen A1. Hueber, 2013. (Arbeitsbuch)\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture ","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T10:00:08.521Z","updated_at":"2020-11-25T11:25:46.020Z","lectureHrs":"3.0","labHrs":"0.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":1,"required":"mandatory","code":"-NJF-","name":"Physics","mission":"","ects":6,"examination":"","objectives":"","contents":"","prerequisites":"","literature":"","methods":"","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T09:59:14.340Z","updated_at":"2020-11-20T09:16:17.968Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":1,"required":"mandatory","code":"CS_1_PROG1","name":"Programming 1 ","mission":"Algorithmic thinking, understanding of object structures and expert handling of modern programming languages such as Java are expected from every computer scientist in an academic setting or the workplace. This course is providing essential foundations.","ects":6,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Primitive Data Types\r\n- Declarations\r\n- Operators\r\n- Console I/O\r\n- Control Structures\r\n- Methods \r\n- Object- Oriented Programming \r\n- Arrays \r\n- Assignment, Identity, Equality \r\n- Packages \r\n- Inheritance \u0026 Polymorphism \r\n- Exceptions","prerequisites":"","literature":"- Schildt, Herbert: Java - A Beginner's Guide. Osbourne, 2018.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Laboratory","skills_knowledge_understanding":"- Describe basic algorithms and data structures","skills_intellectual":"- Apply systematic approaches to software development\r\n- Analyse problems and evaluate alternative solutions comparatively\r\n","skills_practical":"- Describe basic algorithms and data structures\r\n- Create simple algorithms\r\n- Design small class structures\r\n- Implement limited programming tasks in an object-oriented language\r\n- Use a current IDE\r\n","skills_general":"- Discuss work results with fellow students and tutors\r\n- Implement and discuss assignments in a small team\r\n","created_at":"2020-08-10T09:57:30.062Z","updated_at":"2020-11-25T11:30:43.636Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":1,"required":"mandatory","code":"CS_1_TFCTS","name":"Technical Foundations of CS","mission":"The module imparts basic knowledge of digital technology and electrical engineering. It is the basis for understanding subsequent modules in digital technology, microprocessors and embedded systems.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Fundamentals of electrical engineering (current, voltage, resistance, energy, power, time-related course of currents and voltages, sources of current and voltage, simple resistor networks)\r\n- Simple electronic components (capacitor, coil, diode, transistor)\r\n- Basic digital circuits (open collector, tri-state, etc.)\r\n- Boolean algebra\r\n- Combinatorial circuits (description of logical problems, derivation of switching function)\r\n- Standard switching networks (comparator, coder, code converters, multiplexers, arithmetic circuits)\r\n- Flip-flops (FF base, clock state control, clock edge control, other FF)\r\n- Switchgears (registers, ring counters, counting circuits, finite state machines)\r\n","prerequisites":"","literature":"- Floyd, T.L.: Digital Fundamentals. Pearson, 2014.\r\n- Wirth, N.: Digital Circiut Design. Springer, 1995.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**\r\n\r\n","methods":"Lecture, Laboratory","skills_knowledge_understanding":"- Understand the functioning of simple electronic components","skills_intellectual":"- Apply and discuss about the technical know-how through practical tasks and develop their own solutions\r\n- Analyse problems and evaluate alternative solutions comparatively\r\n","skills_practical":"- Describe and understand the functioning of simple electronic components\r\n- Analyse simple electronic circuits\r\n- Understand and use simple metrological circuits\r\n- Understand the basic principles of classical digital technology\r\n- Design and build combinatorial basic circuits and operate them\r\n- Design and build sequential basic circuits and operate them\r\n","skills_general":"- Discuss work results with fellow students and tutors\r\n- Compile the work results in a small team\r\n","created_at":"2020-08-06T13:57:19.797Z","updated_at":"2020-11-28T19:47:19.902Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":2,"required":"mandatory","code":"CS_2_CONE","name":"Computer Networks","mission":"The concepts of wired and wireless communication networks are indispensable building blocks of today's information systems. Their implementations represent important key technologies to open up new fields of application, for example, in the field of multimedia applications, cloud computing or networked embedded systems. Due to the constantly increasing networking of almost all objects of daily life, the competences provided by the module are indispensable for the qualification of graduates on the labour market.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Principles and limitations of data transfer\r\n- Concepts of media access, error detection and error handling\r\n- Local network technologies: Ethernet (IEEE 802.3) and WLAN (IEEE 802.11)\r\n- Concepts of routing and of reliable data transport\r\n- Network and transport protocols using the example of the Internet Protocol Suite\r\n- Planning, configuration and administration of computer networks\r\n- Inter-process communication using the example of socket programming\r\n- Introduction to the programming of distributed applications\r\n","prerequisites":"","literature":"- Kurose, J.F.; Ross, K.W.: Computer Networking - A Top-Down Approach. 7th, Prentice Hall, 2016.\r\n- Tanenbaum, A.S; Wetherall, D.J.: Computer Networks. 5th, Pearson, 2013.\r\n- Karl, H; Willig, A.: Protocols and Architectures for Wireless Sensor Networks. 1th, John Wiley \u0026 Sons, 2007.\r\n- Nader, F.M.: Computer and Communication Networks. 1th, Prentice Hall, 2006.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Laboratory","skills_knowledge_understanding":"- Describe the functioning of network components and their interaction\r\n- Describe the architectural approaches of common network technologies","skills_intellectual":"- Apply the acquired knowledge to implement heterogeneous communication networks\r\n- Assess the suitability of network technologies for a given application scenario and develop their own solutions\r\n","skills_practical":"- Describe the architectural approaches of common network technologies\r\n- Explain and classify basic communication protocols\r\n- Describe the functioning of network components and their interaction","skills_general":"- Cooperate in small teams to solve practical problems","created_at":"2020-08-10T10:14:29.279Z","updated_at":"2020-11-28T19:49:16.209Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":2,"required":"mandatory","code":"-NJF-","name":"English 2 ","mission":"","ects":2,"examination":"","objectives":"","contents":"","prerequisites":"","literature":"","methods":"","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T10:16:15.277Z","updated_at":"2020-11-20T09:16:44.657Z","lectureHrs":null,"labHrs":null,"tutorialHrs":null,"equipment":"","room":""},{"semester":2,"required":"mandatory","code":"CS_2_GER2","name":"German 2","mission":"Despite the computer science working environment being focused on English, computer scientists and students in Germany need to be able to communicate with their working and research environment in German. Therefore, several modules cover basic and lower intermediate levels of German as well as technical German in order to enable students to perform effectively and interact with their environment.","ects":3,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"The module \"German 2\" consists of one course also labelled \"Deutsch als Fremdsprache Grundstufe 3\".\r\n\r\n- The students understand sentences and frequently used expressions related to areas of most immediate relevance\r\n- The students communicate in simple and routine tasks requiring a simple and direct exchange of information on familiar and routine matters\r\n- The students describe in simple terms aspects of their background, immediate environment and matters in areas of immediate need\r\n- The students read simple texts and explain the context\r\n- The students plan their own activities and interact with others\r\n\r\nThe module “German 2” correlates with level A2.1 of the Common European Framework for Languages.\r\n","contents":"***Culture:***\r\n\r\n- Working culture\r\n- Behaviour\r\n\r\n***Language:***\r\n\r\n- Talk about jobs and family (different types of jobs, family history)\r\n- Preferences and wishes (likes and dislikes)\r\n- Plan a trip or tate (with someone else, report about it, offer/deny something)\r\n- Ask for help (getting/giving advice, suggestions)\r\n- Visiting a restaurant (order, complain, pay)\r\n- Celebration (thank someone, congratulate someone, express surprise)\r\n- Write a postcard and e-mail, read newspapers, magazines and factual texts ","prerequisites":"","literature":"- Menschen A2., Hueber, 2014 (Kursbuch)\r\n- Menschen A2., Hueber, 2014 (Arbeitsbuch)\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T10:15:57.941Z","updated_at":"2020-11-29T12:05:50.890Z","lectureHrs":"3.0","labHrs":"0.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":2,"required":"mandatory","code":"CS_2_LINA","name":"Linear Algebra","mission":"Mathematics is a fundamental intellectual tool in computing, but computing is also increasingly used as a key component in mathematical problem-solving. So introducing the basic of mathematical logic and proofs, induction, sets and sums the base for many applications in computer science. The knowledge of vectors, matrices and their applications (e.g. in computer graphics) is one of the basic skills of every computer engineer. Generalizing concepts like linearity or the vector space train the essential ability of abstraction to computer engineers. The confident mastery of the methods of linear algebra is therefore essential for further activities in computer science.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Logic, proofs, sets, sums\r\n- Vector and matrix algebra\r\n- Systems of linear equations\r\n- Linear mappings and their applications\r\n- Eigen values and eigenvectors with applications\r\n- Vector spaces\r\n- Iterative methods for solving systems of linear equations","prerequisites":"","literature":"- Strang, Gilbert: Linear Algebra and its applications. Cengage, 2006.\r\n- https://open.umn.edu/opentextbooks/textbooks/24\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Tutorial","skills_knowledge_understanding":"- Understand the benefits of abstract structures for reusability of detected relationships ","skills_intellectual":"- Apply the knowledge based on practical tasks and develop their own solutions\r\n- Understand the benefits of abstract structures for reusability of detected relationships ","skills_practical":"- Basics: logic, methods of proof, sets, sums\r\n- Compute with vectors and matrices and perform application tasks\r\n- Represent and analyse systems of linear equations and linear transformations using matrices\r\n- Understand the structure of a vector space and transfer them to various mathematical objects\r\n- Use numerical methods to solve systems of linear equations","skills_general":"- Support each other while solving tasks in study groups and in the context of self-learning units\r\n- Assess their own skills in analysing problems and in devising solutions","created_at":"2020-08-10T10:13:42.638Z","updated_at":"2020-11-25T11:26:53.004Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":2,"required":"mandatory","code":"CS_2_MCOM","name":"Microcomputer Technology","mission":"Peration and programming of typical I/O controllers and microprocessors. This kind of knowledge is of fundamental importance for computer scientists working in the system software area.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments.","objectives":"","contents":"- Programming model of a microprocessor\r\n- Case study: instruction set of a modern RISC microprocessor\r\n- Interrupts (vector-interrupt-controller)\r\n- I/O units and operation modes (polling, interrupts, DMA)\r\n- System bus and address mapping\r\n- Memory technologies (SRAM, DRAM, SDRAM, ROM)\r\n- Memory hierarchy (main memory, caches, registers)\r\n","prerequisites":"","literature":"- Patterson, David A.; Hennessy, John L.: Computer Organization \u0026 Design - The Hardware/Software Interface. Morgan Kaufmann, 2014.\r\n- Altera Corporation: Tutorial - Introduction to the Altera Nios II Soft Processor.\r\n- Altera Corporation: DE1-SoC Computer System with ARM Cortex-A9.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**\r\n","methods":"Lecture, Laboratory","skills_knowledge_understanding":"- Read the technical documentation of a computer system in order to develope system software for that computer","skills_intellectual":"- Read the technical documentation of a computer system in order to develope system software for that computer\r\n- Adapt gained expertise to solve small practical tasks or to discuss and develop different approaches to solve a given problem","skills_practical":"- Term and describe the components of the programming model of a modern microprocessor\r\n- Explain and classify most important I/O operation modes (polling, interrupt, DMA)\r\n- Select a suitable operation mode for dedicated I/O units\r\n- Specify the components computer's memory hierarchy and explain their impact on system performance\r\n- Develop small assembly language software routines to control I/O devices","skills_general":"- Handle tasks by collaborate in practice mode in small groups","created_at":"2020-08-10T10:15:20.603Z","updated_at":"2020-11-29T12:04:09.262Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":2,"required":"mandatory","code":"CS_2_PROG2\r\n","name":"Programming 2","mission":"Today, algorithmic thinking, understanding of object structures and expert handling of modern programming languages such as Java is today expected from every computer engineer as a matter of fact. For this, this course consolidates the contents of Programming 1.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Graphical User Interfaces (JavaFX)\r\n- Enumerations \r\n- Interfaces\r\n- Generics\r\n- Dynamic Data Structures\r\n- Threads\r\n","prerequisites":"","literature":"- Schildt, Herbert: Java: A Beginner's Guide. Osbourne, 2018.\r\n- Schildt, Herbert: Introducing Javafx 8 Programming. Oracle, 2015.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Laboratory","skills_knowledge_understanding":"- Understand simple recursive data structures and use them meaningfully\r\n- Understand advanced concepts of modern programming languages","skills_intellectual":"- Apply systematic approaches to software development\r\n- Analyse problems and evaluate alternative solutions comparatively\r\n","skills_practical":"- Understand and apply advanced concepts of modern programming languages\r\n- Understand simple recursive data structures and use them meaningfully\r\n- Design and implement simple graphical user interfaces\r\n- Use threads for concurrent programming\r\n","skills_general":"- Discuss work results with fellow students and tutors\r\n- Design and implement solutions in a team\r\n","created_at":"2020-08-10T10:14:10.224Z","updated_at":"2020-11-29T12:02:07.537Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":2,"required":"mandatory","code":"CS_2_TCTS","name":"Theoretical CS","mission":"In order to be able to work on complex tasks in computer science, it is usually necessary to formalize the problems on a description level that is clearly above the level of programming, in order to be able to analyze and solve them exactly on this more abstract level with available or newly developed means, or also to recognize that they are in principle not solvable. For this purpose, Theoretical Computer Science offers a range of established formal modelling, analysis and solution methods and trains in particular the important ability to abstract.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Basic concepts of graph theory\r\n- Formal Languages\r\n- Deterministic and non-deterministic finite automata\r\n- Regular expressions and regular languages\r\n- Context-free grammars\r\n- Pushdown automata\r\n- Efficient top-down parsing\r\n- Introduction to Predicate Logic\r\n- Computability, Church's thesis, undecidable problems, halting problem\r\n","prerequisites":"","literature":"- Hoffmann, D.W.: Theoretische Informatik. 4. Aufl. Carl Hanser, 2018.\r\n- Hopcorft, J.E.; Motwani, R.; Ullman, D.: Introduction to Automata Theory, Languages and Computation. Pearson, 2013.\r\n- Sipser, M.: Introduction to the Theory of Computation. Cengage Learning, Inc, 2012.\r\n- Aho, A.V.; Lam, M.S; Sethi, R.; Ullman, D.:Compilers. 2nd ed., Addison Wesley, 2013.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Tutorial","skills_knowledge_understanding":"","skills_intellectual":"- Identify typical class of problems in application problems and formalize the description of methods handled so as to lead them to a systematic solution\r\n- Prove the characteristics of the systems described on the basis of formal descriptions\r\n","skills_practical":"- Explain basic concepts from the graph theory, logic, formal languages, automata theory and the computability theory\r\n- Explain and apply important descriptive, analytical and proof methods from the field of formal languages\r\n- Explain important characteristics of different language and automata classes\r\n- Identify fundamental limitations on the computability and decidability\r\n","skills_general":"- Indentify typical class of problems in application problems and formalize the description of methods handled so as to lead them to\r\na systematic solution\r\n- Prove the characteristics of the systems described on the basis of formal descriptions","created_at":"2020-08-10T10:15:01.589Z","updated_at":"2020-11-29T12:02:49.116Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":3,"required":"mandatory","code":"CS_3_CALC2","name":"Calculus 2","mission":"Calculus 2 is an mathematics course that teaches students about integration and multidimensional functions and it is essential to the study of computer science. Questions that can be handled using analytical methods, occur in many IT applications. Confidently mastering these basic approaches of thinking and method is an indispensable condition for any activity in the field of computer science. The FFT is one of the central algorithms for signal and image analysis. Mastering these methods is a prerequisite for a successful career in the field of computer science.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Function series (Taylor series, Fourier series, DFT and FFT)\r\n- Applications of integral calculus, including simple differential equations of 1st order\r\n- Numerical integration methods (Simpson, Runge-Kutta)\r\n- Numerical iteration methods for (Runge-Kutta) differential equations of the 1st order\r\n- Multidimensional analysis (partial derivatives, optimization, error propagation)\r\n","prerequisites":"","literature":"- Spivak, Michael: Calculus. Cambridge, 1967.\r\n- https://openstax.org/subjects/math\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Tutorial","skills_knowledge_understanding":"","skills_intellectual":"- Comprehend more complex tasks, break them down into individual steps and solve the problem through the acquired numeracy \r\n- Solve numerical problems in MATLAB","skills_practical":"- Represent functions by Taylor or Fourier series\r\n- Set up and solve simple differential equations as a model of a dynamic system\r\n- Apply numerical methods and to interpret the results\r\n- Calculate extrema of functions of several variables with and without constraints\r\n- Linearize nonlinear relations using the total differential\r\n","skills_general":"- Mutually support in solving problems and in the context of self-learning units\r\n- Assess their own skills in analysing problems and in devising solutions\r\n","created_at":"2020-08-10T10:16:39.506Z","updated_at":"2020-11-29T12:06:57.432Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":3,"required":"mandatory","code":"CS_3_COMOD","name":"Communication and Moderation","mission":"This module teaches social engineering skills so as to be able to effectively collaborate during work processes in the operational or scientific environment. Thus it prepares the students for their day-to-day professional life.","ects":2,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Basics of communication: Verbal and nonverbal communication, communication and behavioural styles, strategies for successful communication\r\n- Conflict management in teams: causes and indications of conflicts, the cycle of conflict management, conflict resolution strategies\r\n- Facilitation techniques: definition of targets and moderation environment, moderation phases\r\n- Art of negotiation: steps of negotiation and strategies, preparation and conduct of negotiations\r\n","prerequisites":"","literature":"- Association for Talent Development: 10 Steps to Successful Facilitation. ATD Press, 2018.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Tutorial","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"- Recognise the importance of communication in companies\r\n- Use tools, techniques and rules of communication according to the situation\r\n- Recognise and resolve conflicts\r\n- Perform facilitation in different situations","created_at":"2020-08-10T10:18:31.564Z","updated_at":"2020-11-29T12:20:36.624Z","lectureHrs":"3.0","labHrs":"0.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":3,"required":"mandatory","code":"CS_3_DABA\r\n","name":"Databases","mission":"Database systems are a central building block for many information systems. In the modern society they are gaining more and more importance, for example, in commercial and administrative information systems, geographic information systems, data warehouse applications and others. Knowledge in this field of application is therefore absolutely important for the professional qualification of a computer scientist and indispensable for the development of complex information systems.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"**Theoretical Track**\r\n\r\n- Definitions \u0026 Reference Model\r\n- The Relational Data Model\r\n- Normal Forms\r\n- Transactions\r\n\r\n**Practical Track**\r\n\r\n- SQL\r\n- Database Programming","prerequisites":"","literature":"- lmasri, R.; Navathe, S.: Fundamentals of Database Systems. Prentice Hall, 2016.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Tutorial","skills_knowledge_understanding":"","skills_intellectual":"- Apply and discuss the expertise gained using a simple database on a commercial database management system","skills_practical":"- Assess and integrate relational databases for information management in the context of information systems\r\n- Create Entity-Relationship models of the real world using a modelling tool and relate such models to a relational database\r\n- Analyze data for functional dependencies and explain and apply normalization steps\r\n- Create, query and update a database using standard SQL\r\n- Use a  standard interface of a database management system from a programming language (Java)\r\n- Explain the transaction concept and use transactions as concept of synchronization","skills_general":"- Collaborate in small groups solving problems in database design, SQL and database programming","created_at":"2020-08-10T10:17:37.864Z","updated_at":"2020-11-29T12:07:57.779Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":3,"required":"mandatory","code":"CS_3_DASA\r\n","name":"Data Structures and Algorithms","mission":"During application development, algorithmic problems often arise, such as the management of large amounts of data, optimization problems or problems that can be traced back to graph-theoretical questions. In this module the necessary skills and knowledge are taught.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Analysis of algorithms: correctness, termination, runtime analysis, asymptotic notation, amortized analysis\r\n- Efficient sorting: efficient comparison-based methods (Heapsort, Mergesort, Quicksort), lower bound for comparison-based sorting, non comparison-based sorting methods (Bucketsort, Radixsort)\r\n- Simple data structures: abstract data types, Stack, Queue, Priority Queue\r\n- Hash algorithms: hash functions, collision resolution with chaining and open addressing/probing, linear, quadratic, and double hashing, dynamic hashing\r\n- Trees: search trees, AVL trees, B-trees, red-black trees, self-organizing trees (Splay trees), digital trees (Tries)\r\n- Graph algorithms: beadth-first search (BFS), depth first search (DFS), cycle detection, topological sorting, shortest paths (Bellman-Ford, Dijkstra), minimum spanning trees (Kruskal, Prim), flows in networks (Ford-Fulkerson), bipartite matching\r\n- Algorithm design methods: divide and conquer, greedy methods, backtracking","prerequisites":"","literature":"- Corman, T.H.; Leiserson, C.E. et. al.: Algorithms. 3rd ed.. PHI Learning, 2010.\r\n- Sedgewick, R.; Wayne, K.: Algorithms. 4th revised ed.. Addison Wesley, 2011.\r\n- Saake, G.; Sattler, K.U.: Algorithmen und Datenstrukturen. dpunkt.verlag, 2006.\r\n- Skiena, Steven S.: The Algorithm Design Manual. Springer, 2008.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Laboratory","skills_knowledge_understanding":"","skills_intellectual":"- Identify the basic algorithmic problems in applications and select suitable algorithms and data structures for them\r\n- Apply techniques of analyzing the runtime of algorithms\r\n- Develop own and efficient algorithms based on general methods of designing","skills_practical":"- Explain and apply important algorithms and data structures for sorting, searching and solving graph-based problems\r\n- Assess as to what kind of effect the choice of data structures has on the efficiency of algorithms\r\n- Explain the limits that exist for solving problems algorithmically","skills_general":"- Discuss problems and possible solutions with domain experts","created_at":"2020-08-10T10:17:56.577Z","updated_at":"2020-11-29T12:19:53.727Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":3,"required":"mandatory","code":"CS_3_GER3","name":"German 3","mission":"Despite the computer science working environment being focused on English, computer scientists and students in Germany need to be able to communicate with their working and research environment in German. Therefore, several modules cover basic and lower intermediate levels of German as well as technical German in order to enable students to perform effectively and interact with their environment.","ects":3,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"The module \"German 3\" consists of one course also labelled \"Deutsch als Fremdsprache Grundstufe 4\".\r\n\r\n- The students understand sentences and frequently used expressions related to areas of most immediate relevance\r\n- The students communicate in simple and routine tasks requiring a simple and direct exchange of information on familiar and routine matters\r\n- The students describe in simple terms aspects of their background, immediate environment and matters in areas of immediate need\r\n- The students describe and rate their own experiences\r\n- The students discuss about their habits, likes and dislikes and comment on each other\r\n\r\nThe module “German 3” correlates with level A2.2 of the Common European Framework for Languages. ","contents":"***Language:***\r\n\r\n- Talk about experiences (in languages, language courses, about teachers)\r\n- Television (habits, likes and dislikes)\r\n- Visiting a hotel (reservations, directions)\r\n- Travelling (habits, report,…)\r\n- Cultural events (inspire someone, convince someone, suggestions)\r\n- Mobility (car, public transportation) ","prerequisites":"","literature":"- Menschen A2., Hueber, 2014. (Kursbuch)\r\n- Menschen A2., Hueber, 2014. (Arbeitsbuch)\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Tutorial","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T10:18:19.673Z","updated_at":"2020-11-29T12:08:32.845Z","lectureHrs":"3.0","labHrs":"0.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":3,"required":"mandatory","code":"CS_3_OPSYS","name":"Operating Systems","mission":"Graduates of computer engineering are expected that they handle the tools of computer science confidently. This implies computers and their operating software.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Introduction\r\n- Operating system structures\r\n- Command interfaces\r\n- File systems\r\n- Address spaces\r\n- Processes, threads\r\n- Synchronization and synchronization errors\r\n- Inter-process communication\r\n- System services\r\n- Security\r\n","prerequisites":"","literature":"- Tanenbaum, Andrew S.: Modern Operating Systems. Third, Prentice Hall, 2008.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecutre, Laboratory","skills_knowledge_understanding":"","skills_intellectual":"- Develop system programs for different Operating Systems\r\n- Recognize problems when using the computer systems\r\n","skills_practical":"- Select Operating Systems for a specific purpose\r\n- Plan a specific purpose of an Operating System\r\n- Install and administrate Operating Systems\r\n","skills_general":"- Assess Operating Systems in cooperation with the overall IT and discuss their use with all those responsible","created_at":"2020-08-10T10:17:17.197Z","updated_at":"2020-11-29T12:18:50.392Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":3,"required":"mandatory","code":"CS_3_PROG3\r\n","name":"Programming 3","mission":"The C++ programming language is one of the most widely used and most powerful programming languages. C++ offers a set of concepts that facilitate deeper understanding of programming languages and their applications in object-oriented programming.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Differences between Java and C++ \r\n- C++ concepts of object-oriented programming (classes, objects, inheritance, polymorphism)\r\n- Storage management, move semantics\r\n- Multiple inheritance, operator overloading, friend-concept, exception handling, I/O, lambdas, ...\r\n- Error analysis of programs \r\n- Generic programming and introduction to C++ \r\n- Standard library","prerequisites":"","literature":"- Lippman, S.; Lajoie, J.; Moo, B.: C++ Primer. 5th edition. Addison-Wesley, 2012. ISBN 978-0321714114.\r\n- Stroustrup, B.: Programming - Principles and Practice Using C++. 2nd edition. Addison Wesley, 2014. ISBN 978-0-321-99278-9.\r\n- Stroustrup, B.: The C++ Programming Language. 4th edition. Addison Wesley, 2013. ISBN 0-201-0-321-563840-4.\r\n- Meyers, S.: Effective Modern C++ - 42 Specific Ways to Improve Your Use of C++11 and C++14. O'Reilly, 2015.\r\n- Josuttis, N.: The C++ Standard Library - A Tutorial and Reference. 2nd edition. Addison Wesley, 2012. ISBN 978-0-321-62321-8.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**\r\n","methods":"Lecture, Laboratory","skills_knowledge_understanding":"","skills_intellectual":"- Independently develop efficient, robust application programs\r\n- Assess as to which programming technique is useful for employing it in a particular context\r\n","skills_practical":"- Create object-oriented programs using the language resources of C++\r\n- Use the C++ programming concepts including newer concepts from C++ 11,14,17\r\n- Handle templates and use the elements of the STL\r\n","skills_general":"- Develop a software solution in a small group","created_at":"2020-08-10T10:17:00.528Z","updated_at":"2020-11-29T12:21:15.907Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":4,"required":"mandatory","code":"CS_4_DWSYS","name":"Distributed and Web-based Systems","mission":"Modern information systems are spatially and logically distributed. This module defines the concept of a distributed system, describes typical system architectures and communication protocols. It enables modelling and implementation of simple distributed applications with special emphasis on the classical conservation objectives of IT security.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Definition\r\n- Transparency requirements\r\n- Architectural models and software concepts\r\n- Communication and Processes\r\n- Object-based Distributed Systems\r\n- Special challenges of distributed systems\r\n- Security requirements and protective measures\r\n","prerequisites":"","literature":"- Tanenbaum, Andrew S.; van Steen, Maarten: Distributed Systems - Second. CreateSpace Independent Publishing Platform, 2017.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Laboratory","skills_knowledge_understanding":"- Describe simple distributed applications in their architecture and function\r\n- Describe the advantages of using a middleware","skills_intellectual":"- Apply expertise in a practical case studies\r\n- Develop and document concepts for new applications\r\n","skills_practical":"- Identify the most important architectural models of distributed systems\r\n- Describe simple distributed applications in their architecture and function\r\n- Design new distributed applications and implement a prototype\r\n- Describe the advantages of using a middleware\r\n- Select and explain suitable protective measures\r\n","skills_general":"- Develop and introduce solutions for medium-weight problems independently","created_at":"2020-08-10T10:19:27.810Z","updated_at":"2020-11-29T13:35:38.466Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":4,"required":"mandatory","code":"CS_4_INSI","name":"Information Security","mission":"No computer system is perfectly secure. The operation of information system always results in some residual risks - not for the\r\nprocessor, e.g. a manufacturer, producer, or a hospital, only but also for the concerned persons such as customers, employees,\r\npatients etc. Moreover, critical infrastructures may also be a danger to society, e.g. if a hospital cannot longer provide medial\r\ncare. Ensuring and maintaining an appropriate level of IT security is a complex task that requires broad qualification technical and\r\norganizational combined with social skills. The good news is that there exist best practices.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Information Security terminology: Security targets, threads, vulnerabilities, risks, security controls, management systems\r\n- Introduction in the Information Security Management Systems (ISMS) based on the standards family ISO 27000\r\n- Set up of typical Information Security Management Systems, including organization, policies, and guidelines\r\n- Identification, assessment, and treatment of typical risks in information systems\r\n- Typical security measures in distributed information systems, in particular in web based systems\r\n- Special fields of interest, e.g. malware control, firewalls systems hardening, encryption technologies, cyberwar, cybersecurity, auditing and reviewing information security, business continuity management, Darknet, network security, etc.\r\n","prerequisites":"","literature":"- Abhishek, Chopra; Chaudhary, Mukund: Implementing an Information Security Management System - Security Management Based on ISO 27001 Guidelines. Apress, 2019.\r\n- van der Wens, Cees: ISO 27001 Handbook - Implementing and auditing an Information Security Management System in small and medium-sized businesses. Independently published, 2019.\r\n- ISO 27001, ISO 27002, ISO 27019, ISO 27799.\r\n- Schoenfield, Brook: Securing Systems - Applied Security Architecture and Threat Models. Apple Academic Press Inc, 2015.\r\n- Sutton, David: Information Risk Management - A practitioner's guide. Bcs Learning \u0026 Development Limited, 2014.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Tutorial","skills_knowledge_understanding":"","skills_intellectual":"- Perform a security analysis following accepted standards\r\n- Identify, document, and reason appropriate security controls\r\n\r\n","skills_practical":"- Locate typical security flaws and vulnerabilities in distributed applications\r\n- Formulate high-level security policies for practical case studies\r\n- Identify risks and appropriate risk reducing security measures\r\n","skills_general":"- Work in new aspects of computer science\r\n- Work out and present solutions in teams","created_at":"2020-08-10T10:19:41.462Z","updated_at":"2020-11-29T13:36:57.804Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":4,"required":"mandatory","code":"CS_4_INDAS","name":"Introduction to Data Science","mission":"The module provides fundamental knowledge for the domain of data science and enables students to perform basic data analysis tasks using different data sources. Furthermore, this module comprises necessary prerequisites for more advanced modules, such as Deep Learning.\r\n","ects":5,"examination":" Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- General terms related to data science and data characteristics \r\n- Data preparation concepts: dealing with missing values, consistency checks, normalization\r\n- Statistical analysis and Pivot tables \r\n- CRISP-DM \r\n- Differences between supervised- and unsupervised learning \r\n- Regression analysis\r\n- Concrete examples of learning methods for classification and clustering\r\n- General challenges in data science: overfitting/underfitting, correlation/causation\r\n- Visualization techniques: box plots, charts, and dashboards \r\n","prerequisites":"","literature":"- Kelleher, Tierney: Data Science, MIT Press, 2018.\r\n- Fawcett; Provost: Data Science for Business – What You Need to Know About Data Mining Data-Analytic Thinking, O’Reilly, 2013.\r\n- Grus: Data Science from Scratch – First Principles with Python, O’Reilly, 2019.\r\n- Tufte: The Visual Display of Quantitative Information, Graphics Press, 2001.\r\n\r\n**Other bibliographical references will be provided in the course of a currently held lecture.**\r\n","methods":"Lecture, Laboratory ","skills_knowledge_understanding":"","skills_intellectual":"- Distinguish different data science related tasks from one another (visual analytics, statistical analytics, supervised/unsupervised learning) \r\n- Solve analytical tasks using the CRISP-DM process model\r\n- Critically evaluate results with respect to the initial use-cases\r\n","skills_practical":"- Evaluate data quality and prepare data for a data science process\r\n- Solve simple analytical tasks using suitable tools and methods\r\n- Understand the individual steps of a basic data science pipeline and implement it using arbitrary data sources\r\n- Visualize data and analysis results with the help of appropriate tools and methods\r\n","skills_general":"- Discuss analysis results, visualizations and applied methods with fellow students and tutors\r\n- Co-operate in small teams and present undertaken work to an audience\r\n","created_at":"2020-08-10T10:19:54.697Z","updated_at":"2020-11-29T13:44:31.717Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":4,"required":"mandatory","code":"-NJF-","name":"Introduction to Media Informatics","mission":"","ects":5,"examination":"","objectives":"","contents":"","prerequisites":"","literature":"","methods":"","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-10-03T13:17:48.503Z","updated_at":"2020-11-20T10:31:52.043Z","lectureHrs":null,"labHrs":null,"tutorialHrs":null,"equipment":"","room":""},{"semester":4,"required":"mandatory","code":"CS_4_SWEN","name":"Software Engineering","mission":"The module teaches essential knowledge and methods for the analysis of engineering problems as well as for high-quality modelling and development of complex hardware / software systems. Skills imparted during the course are core competencies of any computer engineer.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Basic concepts and challenges of software engineering\r\n- Software development process models \r\n- Modeling with the UML - Requirements analysis: terms and classification, documentation of requirements, UML use case and Interaction diagrams, methods of requirements determination \r\n- Object-oriented SW design: terms, mechanisms, design principles, procedures, UML class and object diagrams \r\n- Design pattern \r\n- SW architecture: meaning, architecture pattern, model-view-controller pattern \r\n- SW quality assurance: inspections and reviews, testing \r\n- Configuration management: version management, build automation","prerequisites":"","literature":"- Sommerville, I.: Software Engineering. Pearson, Boston, 2015. ISBN 978-0133943030. \r\n- Larman, C.: Applying UML and Patterns - An Introduction to Object-Oriented Analysis and Design and Iterative Development (3rd Edition). 2004. ISBN 978-0131489066. \r\n- Gamma, E.; Helm, R.; Johnson, R.; Vlissides, J.: Design Patterns - Elements of Reuseable Object-Oriented Software. Addison-Wesley, 1994. ISBN 978-0201633610. \r\n- Cohn, Mike. Succeeding with Agile - Software Development Using Scrum. Addison-Wesley Longman, 2009. ISBN 978-0-321-57936-2. \r\n- Seidl, M. et. al. UML @ Classroom: An Introduction to Object-Oriented Modeling. Springer, ISBN 978-3319127415, 2015.  \r\n\r\n***Further bibliographical references will be provided within the respective current event***","methods":"Lecture, Laboratory\r\n","skills_knowledge_understanding":"- Describe agile development processes and explain the differences with regard to other software development processes","skills_intellectual":"- Apply agile development processes in software development \r\n- Analyse and document requirements in SW projects \r\n- Design complex software systems and specify their structure and behavior using UML \r\n- Assess software designs in terms of quality criteria and compare various alternative solutions \r\n- Plan and implement systematically quality assurance measures in the development of software systems","skills_practical":"- Describe agile development processes and explain the differences with regard to other software development processes \r\n- Use the linguistic capabilities of Unified Modelling language to create abstract views of a system \r\n- Apply selected design patterns \r\n- Apply important design principles for the development of SW systems","skills_general":"- Discuss alternatives in development results (e.g. software design) with factual arguments in a team and reach decisions","created_at":"2020-08-10T10:19:14.248Z","updated_at":"2020-12-15T21:32:10.652Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":4,"required":"mandatory","code":"CS_4_STOC\r\n","name":"Stochastics","mission":"Questions that can be dealt with by using the stochastic methods developed here occur in IT applications. Mastering these methods is a prerequisite for a successful career in the field of computer science.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Descriptive statistics\r\n- Probability theory, random variables\r\n- Discrete and continuous distributions \r\n- Inductive statistics: interval estimates \r\n- Markov chains and queuing \r\n- Simulation and MATLAB","prerequisites":"","literature":"- Heumann, Christian; Schomaker, Michael: Aggarwal, Shalabh - Introduction to Statistics and Data Analysis. Springer, 2016.\r\n- Baron, Michael: Probability and Statistics for Computer Scientists. Chapman \u0026 Hall, 2006. ISBN 978-1584886419.\r\n- https://openstax.org/subjects/math\r\n\r\n**Further bibliographical references will be provided within the respective current event.**\r\n","methods":"Lecture, Tutorial","skills_knowledge_understanding":"- Describe and interpret data by a few key indicators meaningfully","skills_intellectual":"- Recognize the random component in abstract tasks and formulate in the language of the random variables\r\n- Model stochastically and recognize tasks and Break complex textual problems into steps and solve exercise tasks\r\n","skills_practical":"- Describe and interpret data by a few key indicators meaningfully\r\n- Expect probabilities\r\n- Apply the most important discrete and continuous distributions meaningfully\r\n","skills_general":"- Support each other in solving tasks and in the context of self-learning units\r\n- Assess their own skills in analysing problems and in developing solutions\r\n","created_at":"2020-08-10T10:19:00.088Z","updated_at":"2020-11-29T16:54:40.080Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":5,"required":"mandatory","code":"CS_5_DAPRO","name":"Database Programming","mission":"Trained business IT specialists must be able to design and implement application systems with a database backend, often performed in an international environment. The module not only enables students to weigh the advantages and disadvantages of different database architectures, but also to use them accordingly.","ects":5,"examination":" Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Transaction processing, stored procedures (e.g. cursor concept), triggers, events\r\n- Java Database Connectivity and Java Persistience API (JPA)\r\n- PHP incl. PHP Data Objects (PDO)\r\n- NoSQL DBs MongoDB and CouchDB","prerequisites":"","literature":"- Keith, M.: Pro JPA 2 in Java EE 8. In An In-Depth Guide to Java Persistence APIs. Apress, 2018.\r\n- DuBois, P.: MySQL Cookbook. In Solutions for Database Developers and Administrators 3. O'Reilly, 2014.\r\n- Perkins, L.: Seven Databases in Seven Weeks. In A Guide to Modern Databases and NoSQL Movement 2. The Pragmatic Programmers, 2018.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**\r\n","methods":"Lecture, Laboratory","skills_knowledge_understanding":"","skills_intellectual":"- Apply their gained knowledge on practical tasks, critically discuss them and implement their own solutions ","skills_practical":"- Recognize the benefits of stored procedures and triggers and use them in a targeted manner\r\n- Develop Java applications using relational databases\r\n- Configure an object-relational mapping for Java applications\r\n- Develop simple PHP applications\r\n- Can weigh the pros and cons of NoSQL databases","skills_general":"- Cooperate with other developers in application development\r\n- Bring appreciation for the skills of other team members\r\n- Take on their own role in small groups","created_at":"2020-08-10T10:21:46.716Z","updated_at":"2020-11-29T17:00:53.941Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":5,"required":"mandatory","code":"CS_5_DEVI","name":"Data Engineering \u0026 Visualization","mission":"In an environment where companies have to deal with an ever-growing amount of data, it is an essential aspect for data engineers to prepare data, to maintain data and to make it available to others. Furthermore, Data Warehouse driven analysis tasks and data visualization are key skills every data scientist should possess.","ects":5,"examination":" Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Basic background on data quality, data integration, knowledge discovery in databases\r\n- General ETL process and professional ETL tools\r\n- Multi-dimensional data models and schema integration\r\n- Historization and data maintenance\r\n- Differences between OLAP and OLTP\r\n- Business intelligence and OLAP operations\r\n- Visualization and reporting techniques utilizing self-service BI tools (Tableau, Power BI)\r\n","prerequisites":"","literature":"- Kimball; Ross; Thornthwaite; Mundy; Becker: The Data Warehouse Lifecycle Toolkit. Wiley, 2008.\r\n- Inmon; Strauss; Neushloss: DW 2.0 - The Architecture for the Next Generation of Data Warehousing. Morgan Kaufmann, 2008.\r\n- Tufte: The Visual Display of Quantitative Information. Graphics Press, 2001.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**\r\n","methods":"Lecture, Laboratory","skills_knowledge_understanding":"- Apply theoretical knowledge to real-world data integration problems to make educated decisions","skills_intellectual":"- Apply theoretical knowledge to real-world data integration problems to make educated decisions\r\n- Design data warehouses and highlight their advantages and disadvantages in contrast to common databases\r\n- Distinguish between a range of visualization techniques and find suitable ways to visualize data\r\n","skills_practical":"- Understand the necessity of integrating different data sources in order to run analysis tasks\r\n- Identify and describe general issues regarding data quality and data integration\r\n- Describe the ETL process and design ETL workflows using standard software\r\n- Run tool-based analysis tasks for reporting\r\n- Generate useful visualisations and business intelligence dashboards\r\n","skills_general":"- Take (partial) responsibility for work results in a small team\r\n- Contributing to the efforts of a small team by bringing in individual strengths\r\n","created_at":"2020-08-10T10:33:16.166Z","updated_at":"2020-11-29T17:00:37.658Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":5,"required":"mandatory","code":"CS_5_GER4","name":"German 4","mission":"Despite the computer science working environment being focused on English, computer scientists and students in Germany need to be able to communicate with their working and research environment in German. Therefore, several modules cover basic and lower intermediate levels of German as well as technical German in order to enable students to perform effectively and interact with their environment.","ects":3,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"- Students will understand the main points of a conversation if the interlocutor uses clear standard language and if the topics are\r\nfamiliar\r\n- Students are able to react appropriately to most situations in the professional field with limited vocabulary\r\n- Students express themselves on familiar topics and personal areas of interest\r\n- Students report and describe their own experiences and events\r\n- Students describe their own goals and hopes and are able to briefly justify and explain them\r\n- Students discuss environmental topics and deduce conclusions for the future\r\n\r\nThe Technical German course corresponds to level B1.1 of the Common European Framework of Reference for Languages with a content focus on topics of professional life for CTS graduates in Germany.","contents":"- Job-related vocabulary and idiomatic expressions\r\n- Conversation on the phone, in meetings, during presentations and negotiations\r\n- Written expression in e-mails and business letters\r\n- Creating resumes\r\n- Main features of the political system in Germany\r\n- Basic business management terms in the corporate context\r\n- Conveying important customs of German economic and corporate culture","prerequisites":"","literature":"**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T10:20:23.421Z","updated_at":"2020-11-29T16:55:21.725Z","lectureHrs":"3.0","labHrs":"0.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":5,"required":"mandatory","code":"CS_5_ML","name":"Machine Learning","mission":"The module provides students a general background for machine learning concepts and enables them to solve tasks on their own using Python and adjacent libraries. Furthermore, established machine learning models for supervised and unsupervised learning are investigated (with an emphasis on artificial neural networks), which helps build a profound knowledge portfolio for data scientists who wish to work in this field.","ects":5,"examination":" Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- General concepts of machine learning (supervised learning, unsupervised learning, reinforcement learning, training and test data, loss functions, etc.)\r\n- Quality measures and evaluation techniques (confusion matrix, precision, accuracy, recall, f1-score, ROC curve)\r\n- Possible risks and pitfalls, based on Bayesian decision theory, for the domain of machine learning: (decision boundaries, overfitting/underfitting)\r\n- CRISP-DM process model\r\n- Unsupervised learning: clustering (hierarchical and k-means clustering) and association rule learning \r\n- Supervised learning: regression and classification (perceptron, artificial neural networks, k-NN, Naive Bayes, decision trees, SVM)\r\n- Ensemble methods (random forests)\r\n- In-depth investigation of shallow neural networks, including concepts like backpropagation, activation, and regularisation\r\n","prerequisites":"","literature":"- Raschka, Mirjalli: Python Machine Learning. Packt Publishing, 2019.\r\n- Alpaydin: Introduction to Machine Learning. MIT Press, 2009.\r\n- Fawcett, Provost: Data Science for Business – What You Need to Know About Data Mining Data-Analytic Thinking. O’Reilly, 2013.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Lecture, Laboratory","skills_knowledge_understanding":"","skills_intellectual":"- Implement the CRISP-DM process when performing analytical tasks\r\n- Design, implement, and test approaches to solve a given problem\r\n- Place solutions and results in the right context\r\n","skills_practical":"- Understand basic concepts of machine learning  \r\n- Evaluate the quality of different models based on comprehensible criteria\r\n- Use python and its libraries for machine learning\r\n- Choose appropriate machine learning procedures depending on a given task\r\n- Pre-process data to fit a chosen machine learning method\r\n","skills_general":"- Develop and discuss results with fellow students and co-operate in small teams\r\n- Assess their own analytical and conceptual skills and reflect on professional strength and weaknesses  \r\n","created_at":"2020-08-10T10:34:01.603Z","updated_at":"2020-11-29T16:59:42.487Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":5,"required":"mandatory","code":"- NJF -","name":"Research Paper Writing","mission":"","ects":2,"examination":"","objectives":"","contents":"","prerequisites":"","literature":"","methods":"","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-10-01T22:48:49.547Z","updated_at":"2020-11-20T10:16:52.653Z","lectureHrs":null,"labHrs":null,"tutorialHrs":null,"equipment":"","room":""},{"semester":5,"required":"mandatory","code":"CS_5_SOPR","name":"Software Project","mission":"The course enables the participants to work on a challenging project in a group with a role allocation that is typical in practice, in which all competences (technical, methodological and personal skills) acquired up to that point are applied.\r\n\r\nIn addition, the participants acquire the methods of project management realistically and with direct practical relevance. The module therefore has great significance for the professional qualification and employability of the graduates.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"The acquisition of the mentioned competences and skills is achieved by independently carrying out a project in a team of 6-8 people. Students can usually choose from a variety of project proposals for current application areas of computer science according to their individual preferences. The supervising lecturer of a project team provides a framework in terms of content and form, which includes project goals, the superset of techniques and technologies to be used as well as acceptance criteria. He accompanies the team and takes part in the iteration meetings as moderator and consultant.","prerequisites":"","literature":"- Sommerville, I.: Software Engineering. Pearson, 2011. ISBN 978-0137035151.\r\n- Larman, C.: Applying UML and Patterns - An Introduction to Object-Oriented Analysis and Design and Iterative Development (3rd Edition). 2004. ISBN 978-0131489066.\r\n- Gamma, E.; Helm, R.; Johnson, R.: Design Patterns - Elements of Reuse. Addison-Wesley, 1994. ISBN 978-0201633610.\r\n- Ruhe, G.; Wohlin, C.: Software Project Management in a Changing World. Springer, 2014. ISBN 978-364-25503-5-5.","methods":"Project work","skills_knowledge_understanding":"","skills_intellectual":"- Analyze and manage requirements\r\napply methods for project planning and project management\r\n- Select suitable modeling techniques (UML) and development tools and apply them pragmatically\r\n- Run a complete project from vision to deployment on the basis of a suitable process model independently\r\n- Use Design Pattern meaningfully","skills_practical":"- Apply the knowledge acquired so far in an interdisciplinary way to solve a complex task","skills_general":"- Cooperate in the creation of artifacts and implementation in groups with clearly ined roles and jointly develop results\r\n- Mastering challenges in a goal-oriented and persistent manner","created_at":"2020-11-23T09:35:01.758Z","updated_at":"2020-11-29T16:58:35.243Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":6,"required":"mandatory","code":"CS_6_NoSQL","name":"Big Data and NoSQL","mission":"NoSQL databases have become the de-facto standard for storing data in Big Data applications. A fundamental understanding of the methods and techniques involved in this field, as well as their practical application, is crucial for every student who aims to work as a data scientist.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Fundamentals of Big Data and NoSQL databases\r\n- Theoretical foundations regarding MapReduce, CAP theorem and Multi-version Concurrency Control (MVCC)\r\n- Key-value stores\r\n- Document-oriented databases\r\n- Wide-column stores\r\n- Graph databases\r\n","prerequisites":"","literature":"- Perkins; Redmond; Wilson: Seven Databases in Seven Weeks. Pragmatic Bookshelf, 2018.\r\n- Miner; Shook: MapReduce Design Patterns. O’Reilly, 2012.\r\n- Harrison: Next Generation Databases - NoSQL and Big Data. Springer, 2015.\r\n\r\n**Other bibliographical references will be provided in the course syllabus.**\r\n","methods":"Lecture, Laboratory","skills_knowledge_understanding":"","skills_intellectual":"- Set up a distributed database using a Linux operating system\r\n- Design, implement, and test basic distributed algorithms to solve a variety of real-world problems","skills_practical":"- Understand the concept of the four types of NoSQL databases (document-oriented, key-value stores, wide-column stores, and graph databases)\r\n- Choose an appropriate kind of database after analysing a given practical use-case\r\n- Understand the key concepts of the distributed MapReduce algorithm\r\n- Have a grasp on the trade-off between consistency and fault-tolerant distribution when it comes to NoSQL databases including respective advantages and disadvantages\r\n- Understand the differences and draw a comparison between NoSQL databases and traditional relational databases\r\n","skills_general":"- Critically assess their own analytical and conceptional abilities\r\n- Co-operate in small teams and present undertaken work to an audience\r\n","created_at":"2020-08-10T10:35:09.720Z","updated_at":"2020-11-29T17:02:11.116Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":6,"required":"mandatory","code":"CS_6_DL","name":"Deep Learning","mission":"Classification and Significance of the Module\r\nDeep learning is an advanced approach to many data-driven artificial intelligence applications which often yields improved analytical results in comparison to traditional techniques. Therefore, mastering state of the art deep learning methods and algorithms to analyse not only tabular data, but also image data and text data, is a key necessity for future data scientists.\r\n","ects":5,"examination":" Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Introduction to advanced machine learning libraries in Python (Tensorflow, PyTorch)\r\n- Overfitting vs. underfitting, model metrics, and performance measures\r\n- General architecture of deep learning networks\r\n- Deep learning applications: image classification (convolutional neural networks) and natural language processing (recurrent neural networks)\r\n- Time series analysis, LSTMs\r\n- Deep autoencoders and dimensionality reduction\r\n- Synthetic data generation with the help of generative adversarial networks\r\n","prerequisites":"","literature":"- Hastie et al.: The Elements of Statistical Learning. Springer, 2009.\r\n- Duda, Hart, Stork: Pattern Classification. Wiley, 2000.\r\n- Goodfellow; Bengio; Courville: Deep Learning. MIT Press, 2017.\r\n- Raschka, Mirjalli: Python Machine Learning. Packt Publishing, 2019.\r\n\r\n**Other bibliographical references will be provided in the course of a currently held lecture.**\r\n\r\n","methods":"Lecture, Laboratory","skills_knowledge_understanding":"- Apply a multitude of different deep learning algorithms to a variety of problems, utilizing the CRISP-DM process model","skills_intellectual":"- Apply a multitude of different deep learning algorithms to a variety of problems, utilizing the CRISP-DM process model\r\n- Select a machine learning approach that is appropriate for the task at hand\r\n- Critically assess results with respect to performance, overfitting, quality, and statistical significance\r\n","skills_practical":"- Understand the challenges involved with unstructured data (images, text) and how to tackle representative problems\r\n- Understand different deep learning architectures and have a firm grasp on the context they are used in\r\n- Implement machine learning methods and validate the results using Python and suitable libraries\r\n- Understand the importance of transfer learning and apply this learning technique successfully\r\n","skills_general":"- Present complex models and training results to a group of people\r\n- Reflect on the possibilities, chances, and limits of advanced machine learning techniques\r\n","created_at":"2020-08-10T10:35:19.807Z","updated_at":"2020-11-29T17:01:14.560Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":6,"required":"mandatory","code":"CS_6_OM","name":"Optimization Methods","mission":"In the context of data science and machine learning, established optimization methods often are the basis of well-performing models and successful model training. Therefore, every data scientist must develop a thorough understanding of the  optimization techniques involved and their underlying mathematical concepts.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Loss functions, fitness functions\r\n- Graphs and heuristics \r\n- Linear optimization (Simplex algorithm)\r\n- Non-linear optimization (branch and bound)\r\n- Optimality conditions\r\n- Multidimensional functions\r\n- Gradient and (stochastic) gradient descent\r\n- Numerical optimization (Newton’s method)\r\n- Applications in machine learning (least squares method in regression analysis)\r\n","prerequisites":"","literature":"- Sra; Nowozin; Wright: Optimization for Machine Learning. MIT Press, 2011.\r\n- Arora: Optimization - Algorithms and Applications. CRC Press, 2015.\r\n\r\n**Other bibliographical references will be provided in the course of a currently held lecture.**\r\n","methods":"Lecture, Laboratory","skills_knowledge_understanding":"- Apply a multitude of optimization techniques to real-world use-cases\r\n- Apply their knowledge in linear and non-linear optimization to real-world problems","skills_intellectual":"- Model data-driven optimization problems\r\n- Apply a multitude of optimization techniques to real-world use-cases\r\n- Critically evaluate the impact of different optimization techniques in regard to machine learning and model training\r\n","skills_practical":"- Apply their knowledge in linear and non-linear optimization to real-world problems\r\n- Understand the techniques and concepts involved with multidimensional analysis\r\n- Employ numerical optimization where analytical optimization is infeasible\r\n- Implement optimization strategies in Python\r\n","skills_general":"- Support fellow students when working on self-teaching assignments\r\n- Co-operate in teams\r\n- Critically assess their ability to analyse problems and develop suitable solutions\r\n","created_at":"2020-08-10T10:35:36.324Z","updated_at":"2020-11-29T17:01:33.678Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":6,"required":"mandatory","code":"CS_6_SEM","name":"Seminar","mission":"The seminar introduces participants to the autonomous exploration of new subject areas using scientific methods. Lifelong learning is essential for fields developing very dynamically such as computer science. The techniques learned in this module help to structure newly acquired knowledge and insights, to present them correctly, and to protect against misconceptions.","ects":5,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Presentation of seminar topics and topic selection\r\n- Introduction to scientific work\r\n- Self-guided work on the selected topics\r\n- Written documentation in scientific style\r\n- Presentation of results","prerequisites":"","literature":"**Further bibliographical references will be provided within the respective current event.**","methods":"Seminar","skills_knowledge_understanding":"- Describe results in scientific writing and with a scientific presentation\r\n- Understand content from different sources and combine them into an overall view\r\n","skills_intellectual":"- Work independently on a subject area at a scientific level, e.g. in particular through thorough literature research, which includes the study of scientific publications\r\n- View and understand content from different sources and combine them into an overall view\r\n- Describe results in scientific writing and with a scientific presentation\r\n- Apply scientific methodologies, especially with regard to correct citation of literature sources","skills_practical":"- Explain concepts and facts that are relevant to the chosen topic area\r\n- Apply the acquired knowledge to gain insights from limited experiments","skills_general":"- Critically question their own opinions and judgements\r\n- Discuss constructively own views and results with others","created_at":"2020-08-10T10:34:28.609Z","updated_at":"2020-11-29T17:01:48.878Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":7,"required":"mandatory","code":"CS_7_PRAX","name":"Internship and Report","mission":"The module enables students to learn and experience of the laws of economic, legal and social operations as well as practising of social and key skills for everyday professional life. Thus it has a bridging function to launching oneself into the later working life.","ects":15,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"In the internship, the students work on tasks typical for the professional practice and qualification they are striving for under the guidance of a supervisor experienced in the targeted professional field.\r\nThey apply the skills they have acquired during their studies in relevant business practice. Therefore, the internship is to be performed in a company or in another institution of professional practice (practical training center) outside the Ulm University of Applied Sciences.\r\nThe project topics are based on actual questions from practice and can therefore offer opportunities for further study in different areas. The duration of the practical project is at least 100 attendance days.","prerequisites":"","literature":"**Further bibliographical references will be provided within the respective current event.**","methods":"Project work, Seminar","skills_knowledge_understanding":"","skills_intellectual":"- Apply the acquired methodical knowledge concerning project management, project work and planning of work processes in an enterprise environment","skills_practical":"- Develop new and in-depth technical issues on the basis of the knowledge acquired during their studies","skills_general":"- Use of communication and moderation techniques at different hierarchical levels in the business environment\r\n- Practise the methods of time management and structured and independent working","created_at":"2020-09-09T15:20:39.367Z","updated_at":"2020-11-29T17:04:47.900Z","lectureHrs":"3.0","labHrs":"2.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":7,"required":"mandatory","code":"CS_7_PMAN","name":"Project Management and Teamoriented Project","mission":"General goal of the course Project Management is to enable students to plan, guide and implement projects with a focus on the critical success factors of quality, time and cost and achieve the intended objectives. The course is conducted alongside the course so that the theoretical knowledge is directly applied in their own project to project management.","ects":15,"examination":"Final exam, Midterms, Quizzes and Assignments","objectives":"","contents":"- Introduction to Project Management\r\n- Process Models of Software Development\r\n- Project life cycle and relevant project management activities\r\n- Methods of project management\r\n- Classic and Agile Project Management","prerequisites":"","literature":"- Gopal, Kapur K.: Project Management for Information Technology, Business, and certification. Pearson Education, 2005. ISBN 0-13-112335-1.\r\n- Highsmith, James A.: Agile Project Management - creating innovative products. Pearson Education, 2004. ISBN 0-321-21977-5.\r\n- Hughes, Bob et. al.: Project Management for IT-Related Projects. O'Reilly, 2019. ISBN 9781780174853.\r\n- Carr, Emily: Practical Change Management for IT Projects. O'Reilly, 2014. ISBN 9781783000302.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**\r\n\r\n","methods":"Lecutre, Tutorial, Seminar, Project work","skills_knowledge_understanding":"","skills_intellectual":"- Work with project management software\r\n- Create planning documents\r\n- Prove their project management skills incl. self-organization of a project team and evaluation","skills_practical":"- Correctly classify the importance of project management for IT projects\r\n- Demonstrate knowledge of techniques and methods for project management\r\n- Demonstrate knowledge of the key project roles and their tasks and responsibilities\r\n- Distinguish between classical and agile project management","skills_general":"- Manage projects\r\n- Deal with each other as a team","created_at":"2020-08-10T10:36:36.160Z","updated_at":"2020-11-29T17:02:39.743Z","lectureHrs":"3.0","labHrs":"0.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":8,"required":"mandatory","code":"CS_8_BTAS","name":"Bachelor Thesis and Seminar","mission":"The bachelor thesis and the accompanying seminar not only deepen the expertise in a specific topic area of computer science, but also practice important \"soft skills\" that are essential for later professional practice.","ects":15,"examination":"Thesis","objectives":"","contents":"The individual task in the field of computer science is given by the supervising professor.","prerequisites":"","literature":"- Alley, M.: The Craft of scientific Writing. 4th ed..Springer, 2018. ISBN 978-1441982872.\r\n- Zobel, J: Writing for Computer Science. 3rd ed.. Springer, 2015. ISBN 978-1447166382.\r\n\r\n**Further bibliographical references will be provided within the respective current event.**","methods":"Laboratory work","skills_knowledge_understanding":"","skills_intellectual":"- Work independently on a task from the field of computer science under professional and methodical supervision using scientific methods","skills_practical":"","skills_general":"- Plan and perform a comprehensive task in a disciplined manner\r\n- Clarify the requirements and general conditions of an comprehensive task with supervisors/clients\r\n- Use their own creativity to solve problems\r\n- Develop specialized knowledge and methods independently and goal-oriented in order to solve partial problems\r\n- Present the results in the form of a scientific paper in written and oral form","created_at":"2020-08-10T10:38:58.814Z","updated_at":"2020-11-29T17:09:51.922Z","lectureHrs":"3.0","labHrs":"0.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":8,"required":"mandatory","code":"CS_8_PRAX","name":"Internship and Report","mission":"The module enables students to learn and experience of the laws of economic, legal and social operations as well as practising of social and key skills for everyday professional life. Thus it has a bridging function to launching oneself into the later working life.","ects":15,"examination":"Final exam, Midterms, Quizzes and Assignments.","objectives":"","contents":"In the internship, the students work on tasks typical for the professional practice and qualification they are striving for under the guidance of a supervisor experienced in the targeted professional field.\r\nThey apply the skills they have acquired during their studies in relevant business practice. Therefore, the internship is to be performed in a company or in another institution of professional practice (practical training center) outside the Ulm University of Applied Sciences.\r\nThe project topics are based on actual questions from practice and can therefore offer opportunities for further study in different areas. The duration of the practical project is at least 100 attendance days.","prerequisites":"","literature":"**Further bibliographical references will be provided within the respective current event.**","methods":"Project work, Seminar","skills_knowledge_understanding":"","skills_intellectual":"- Apply the acquired methodical knowledge concerning project management, project work and planning of work processes in an enterprise environment","skills_practical":"- Develop new and in-depth technical issues on the basis of the knowledge acquired during their studies","skills_general":"- Use of communication and moderation techniques at different hierarchical levels in the business environment\r\n- Practise the methods of time management and structured and independent working","created_at":"2020-09-09T15:28:09.308Z","updated_at":"2020-11-29T17:10:30.849Z","lectureHrs":"3.0","labHrs":"0.0","tutorialHrs":"2.0","equipment":"","room":""},{"semester":5,"required":"elective","code":"-NJF-","name":"Elective 1","mission":"","ects":5,"examination":"","objectives":"","contents":"","prerequisites":"","literature":"","methods":"","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T10:21:36.387Z","updated_at":"2020-11-20T10:51:59.562Z","lectureHrs":null,"labHrs":null,"tutorialHrs":null,"equipment":"","room":""},{"semester":6,"required":"elective","code":"-NJF-","name":"Elective 2","mission":"","ects":5,"examination":"","objectives":"","contents":"","prerequisites":"","literature":"","methods":"","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T10:34:40.090Z","updated_at":"2020-11-20T10:52:15.239Z","lectureHrs":null,"labHrs":null,"tutorialHrs":null,"equipment":"","room":""},{"semester":6,"required":"elective","code":"-NJF-","name":"Elective 3","mission":"","ects":5,"examination":"","objectives":"","contents":"","prerequisites":"","literature":"","methods":"","skills_knowledge_understanding":"","skills_intellectual":"","skills_practical":"","skills_general":"","created_at":"2020-08-10T10:34:49.190Z","updated_at":"2020-11-20T10:52:07.539Z","lectureHrs":null,"labHrs":null,"tutorialHrs":null,"equipment":"","room":""}]};

module.exports ds;
