const MdDocxTranslator = require('../docx-exporter/md_docx_translator')
const mdDocxTranslator = new MdDocxTranslator()

// **Bold**, -> strong
// _Cursive_, -> em
// Links: [LinkTarget](LinkAlt), -> link
// # / ======= Headings, -> heading
// > Quote, -> blockQuote
// * / - Bullets, -> list, ordered: false
// 1. Numbered List, -> list, ordered: true

describe("simple text", () => {
    it("should do nothing with no formating", () => {
        var actual = mdDocxTranslator.translate("simple text")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "simple text"], "rootKey": "w:t"}], "rootKey": "w:r"}]
        expect(actual).toEqual(expected)
    })
})

describe("linebreaks", () => {
    it("should make multiple lines when dealing with linebreaks", () => {
        var actual = mdDocxTranslator.translate("simple text\n\nwith line breaks")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "simple text"], "rootKey": "w:t"}], "rootKey": "w:r"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "with line breaks"], "rootKey": "w:t"}], "rootKey": "w:r"}]
        expect(actual).toEqual(expected)
    })
})

describe("**Bold**", () => {
    it("should convert a single bold element", () => {
        var actual = mdDocxTranslator.translate("**Something Bold**")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:b"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:bCs"}], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:b"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:bCs"}], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Something Bold"], "rootKey": "w:t"}], "rootKey": "w:r"}]
        expect(actual).toEqual(expected)
    })
    // it("should convert a bold element between other elements", () => {
    //     var actual = mdDocxTranslator.translate("something **Something Bold** else.")
    //     var expected = [{"content": [{"content": "something ", "type": "text"}, {"content": [{"content": "Something Bold", "type": "text"}], "type": "strong"}, {"content": " else", "type": "text"}, {"content": ".", "type": "text"}], "type": "paragraph"}]
    //     expect(actual).toEqual(expected)
    // })
})

describe("_Cursive_", () => {
    it("should convert a single cursive element", () => {
        var actual = mdDocxTranslator.translate("_Something Cursive_")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:i"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:iCs"}], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:i"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:iCs"}], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Something Cursive"], "rootKey": "w:t"}], "rootKey": "w:r"}]
        expect(actual).toEqual(expected)
    })
    // it("should convert a cursive element between other elements", () => {
    //     var actual = mdDocxTranslator.translate("something _Something Cursive_ else.")
    //     var expected = [{"content": [{"content": "something ", "type": "text"}, {"content": [{"content": "Something Cursive", "type": "text"}], "type": "em"}, {"content": " else", "type": "text"}, {"content": ".", "type": "text"}], "type": "paragraph"}]
    //     expect(actual).toEqual(expected)
    // })
})

// describe("Links - [LinkTarget](LinkAlt)", () => {
//     it("should convert a single link element", () => {
//         var actual = mdDocxTranslator.translate("[LinkTarget](LinkAlt)")
//         var expected = [{"content": [{"content": [{"content": "LinkTarget", "type": "text"}], "target": "LinkAlt", "title": undefined, "type": "link",}], "type": "paragraph"}]
//         expect(actual).toEqual(expected)
//     })
//     it("should convert a link element between other elements", () => {
//         var actual = mdDocxTranslator.translate("something [LinkTarget](LinkAlt) else.")
//         var expected = [{"content": [{"content": "something ", "type": "text"}, {"content": [{"content": "LinkTarget", "type": "text"}], "target": "LinkAlt", "title": undefined, "type": "link",}, {"content": " else", "type": "text"}, {"content": ".", "type": "text"}], "type": "paragraph"}]
//         expect(actual).toEqual(expected)
//     })
// })

describe("Headings Level 1 \n=====", () => {
    it("should convert a single heading element", () => {
        var actual = mdDocxTranslator.translate("Some Headline\n=====")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "Heading1"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}], "rootKey": "w:pPr"}, "root": [{"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "Heading1"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}], "rootKey": "w:pPr"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Some Headline"], "rootKey": "w:t"}], "rootKey": "w:r"}], "rootKey": "w:p"}]
        expect(actual).toEqual(expected)
    })
    // it("should convert a heading element between other elements", () => {
    //     var actual = mdDocxTranslator.translate("something \n\nHeading\n=====\n\n else.")
    //     var expected = [{"content": [{"content": "something ", "type": "text"}], "type": "paragraph"}, {"content": [{"content": "Heading", "type": "text"}], "level": 1, "type": "heading"}, {"content": [{"content": " else", "type": "text"}, {"content": ".", "type": "text"}], "type": "paragraph"}]
    //     expect(actual).toEqual(expected)
    // })
})

describe("# Headings Level 1", () => {
    it("should convert a single heading element", () => {
        var actual = mdDocxTranslator.translate("# Some Headline")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "Heading1"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}], "rootKey": "w:pPr"}, "root": [{"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "Heading1"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}], "rootKey": "w:pPr"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Some Headline"], "rootKey": "w:t"}], "rootKey": "w:r"}], "rootKey": "w:p"}]
        expect(actual).toEqual(expected)
    })
    // it("should convert a heading element between other elements", () => {
    //     var actual = mdDocxTranslator.translate("something \n\n# Heading\n\n else.")
    //     var expected = [{"content": [{"content": "something ", "type": "text"}], "type": "paragraph"}, {"content": [{"content": "Heading", "type": "text"}], "level": 1, "type": "heading"}, {"content": [{"content": " else", "type": "text"}, {"content": ".", "type": "text"}], "type": "paragraph"}]
    //     expect(actual).toEqual(expected)
    // })
})

describe("> Quote", () => {
    it("should convert a single quote element", () => {
        var actual = mdDocxTranslator.translate("> Foo Bar")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:i"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:iCs"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": "grey"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:highlight"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": "grey"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:highlightCs"}], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:i"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": true}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:iCs"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": "grey"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:highlight"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": "grey"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:highlightCs"}], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Foo Bar"], "rootKey": "w:t"}], "rootKey": "w:r"}]
        expect(actual).toEqual(expected)
    })
    // it("should convert a multiline quote element", () => {
    //     var actual = mdDocxTranslator.translate("> A Quote\ncontinued")
    //     var expected = [{"content": [{"content": [{"content": "A Quote\ncontinued", "type": "text"}], "type": "paragraph"}], "type": "blockQuote"}]
    //     expect(actual).toEqual(expected)
    // })
    // it("should convert a quote element between other elements", () => {
    //     var actual = mdDocxTranslator.translate("something\n> A Quote\n\nelse")
    //     var expected = [{"content": [{"content": "something\n", "type": "text"}, {"content": "> A Quote", "type": "text"}], "type": "paragraph"}, {"content": [{"content": "else", "type": "text"}], "type": "paragraph"}]
    //     expect(actual).toEqual(expected)
    // })
})

describe("- Bullets", () => {
    it("should convert a single bullet element", () => {
        var actual = mdDocxTranslator.translate("- Bullet points")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "ListParagraph"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}, {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": 0}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:ilvl"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": 1}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:numId"}], "rootKey": "w:numPr"}], "rootKey": "w:pPr"}, "root": [{"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "ListParagraph"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}, {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": 0}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:ilvl"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": 1}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:numId"}], "rootKey": "w:numPr"}], "rootKey": "w:pPr"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Bullet points"], "rootKey": "w:t"}], "rootKey": "w:r"}], "rootKey": "w:p"}]
        expect(actual).toEqual(expected)
    })
    it("should convert multiple bullet elements", () => {
        var actual = mdDocxTranslator.translate("- Bullet point 1 \n- Bullet point 2 \n- Bullet point 3")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "ListParagraph"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}, {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": 0}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:ilvl"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": 1}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:numId"}], "rootKey": "w:numPr"}], "rootKey": "w:pPr"}, "root": [{"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "ListParagraph"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}, {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": 0}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:ilvl"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": 1}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:numId"}], "rootKey": "w:numPr"}], "rootKey": "w:pPr"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Bullet point 1"], "rootKey": "w:t"}], "rootKey": "w:r"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Bullet point 2"], "rootKey": "w:t"}], "rootKey": "w:r"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Bullet point 3"], "rootKey": "w:t"}], "rootKey": "w:r"}], "rootKey": "w:p"}]
        expect(actual).toEqual(expected)
    })
    // it("should convert multiple bullet elements between other elements", () => {
    //     var actual = mdDocxTranslator.translate("something\n\n- Bullet 1 \n- Bullet 2 \n- Bullet 3\n\nelse")
    //     var expected = [{"content": [{"content": "something", "type": "text"}], "type": "paragraph"}, {"items": [[{"content": "Bullet 1", "type": "text"}], [{"content": "Bullet 2", "type": "text"}], [{"content": "Bullet 3", "type": "text" }]], "ordered": false, "start": undefined, "type": "list"}, {"content": [{"content": "else", "type": "text"}], "type": "paragraph"}]
    //     expect(actual).toEqual(expected)
    // })
})

describe("* Bullets", () => {
    it("should convert a single bullet element", () => {
        var actual = mdDocxTranslator.translate("* Bullet points")
        var expected = [{"deleted": false, "properties": {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "ListParagraph"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}, {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": 0}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:ilvl"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": 1}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:numId"}], "rootKey": "w:numPr"}], "rootKey": "w:pPr"}, "root": [{"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "ListParagraph"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}, {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": 0}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:ilvl"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": 1}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:numId"}], "rootKey": "w:numPr"}], "rootKey": "w:pPr"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Bullet points"], "rootKey": "w:t"}], "rootKey": "w:r"}], "rootKey": "w:p"}]
        expect(actual).toEqual(expected)
    })
    it("should convert multiple bullet elements", () => {
      var actual = mdDocxTranslator.translate("* Bullet point 1 \n* Bullet point 2 \n* Bullet point 3")
      var expected = [{"deleted": false, "properties": {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "ListParagraph"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}, {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": 0}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:ilvl"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": 1}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:numId"}], "rootKey": "w:numPr"}], "rootKey": "w:pPr"}, "root": [{"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": "ListParagraph"}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:pStyle"}, {"deleted": false, "root": [{"deleted": false, "root": [{"deleted": false, "root": {"val": 0}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:ilvl"}, {"deleted": false, "root": [{"deleted": false, "root": {"val": 1}, "rootKey": "_attr", "xmlKeys": {"bottom": "w:bottom", "color": "w:color", "fill": "w:fill", "footer": "w:footer", "gutter": "w:gutter", "h": "w:h", "header": "w:header", "left": "w:left", "linePitch": "w:linePitch", "pos": "w:pos", "right": "w:right", "rsidR": "w:rsidR", "rsidRPr": "w:rsidRPr", "rsidSect": "w:rsidSect", "space": "w:space", "sz": "w:sz", "top": "w:top", "type": "w:type", "val": "w:val", "w": "w:w"}}], "rootKey": "w:numId"}], "rootKey": "w:numPr"}], "rootKey": "w:pPr"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Bullet point 1"], "rootKey": "w:t"}], "rootKey": "w:r"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Bullet point 2"], "rootKey": "w:t"}], "rootKey": "w:r"}, {"deleted": false, "properties": {"deleted": false, "root": [], "rootKey": "w:rPr"}, "root": [{"deleted": false, "root": [], "rootKey": "w:rPr"}, {"deleted": false, "root": [{"deleted": false, "root": {"space": "preserve"}, "rootKey": "_attr", "xmlKeys": {"space": "xml:space"}}, "Bullet point 3"], "rootKey": "w:t"}], "rootKey": "w:r"}], "rootKey": "w:p"}]
      expect(actual).toEqual(expected)
    })
    // it("should convert multiple bullet elements between other elements", () => {
    //     var actual = mdDocxTranslator.translate("something\n\n* Bullet 1 \n* Bullet 2 \n* Bullet 3\n\nelse")
    //     var expected = [{"content": [{"content": "something", "type": "text"}], "type": "paragraph"}, {"items": [[{"content": "Bullet 1", "type": "text"}], [{"content": "Bullet 2", "type": "text"}], [{"content": "Bullet 3", "type": "text" }]], "ordered": false, "start": undefined, "type": "list"}, {"content": [{"content": "else", "type": "text"}], "type": "paragraph"}]
    //     expect(actual).toEqual(expected)
    // })
})

// describe("1. List", () => {
//     it("should convert a single list element", () => {
//         var actual = mdDocxTranslator.translate("1. List")
//         var expected = [{"items": [[{"content": "List", "type": "text" }]], "ordered": true, "start": 1, "type": "list"}]
//         expect(actual).toEqual(expected)
//     })
//     it("should convert multiple list elements starting at one", () => {
//         var actual = mdDocxTranslator.translate("1. Item 1 \n2. Item 2 \n3. Item 3")
//         var expected = [{"items": [[{"content": "Item 1", "type": "text"}], [{"content": "Item 2", "type": "text"}], [{"content": "Item 3", "type": "text" }]], "ordered": true, "start": 1, "type": "list"}]
//         expect(actual).toEqual(expected)
//     })
//     it("should convert multiple list elements not starting at one", () => {
//         var actual = mdDocxTranslator.translate("3. Item 3 \n4. Item 4 \n5. Item 5")
//         var expected = [{"items": [[{"content": "Item 3", "type": "text"}], [{"content": "Item 4", "type": "text"}], [{"content": "Item 5", "type": "text" }]], "ordered": true, "start": 3, "type": "list"}]
//         expect(actual).toEqual(expected)
//     })
//     it("should convert multiple list elements between other elements", () => {
//         var actual = mdDocxTranslator.translate("something\n\n1. Item 1 \n2. Item 2 \n3. Item 3\n\nelse")
//         var expected = [{"content": [{"content": "something", "type": "text"}], "type": "paragraph"}, {"items": [[{"content": "Item 1", "type": "text"}], [{"content": "Item 2", "type": "text"}], [{"content": "Item 3", "type": "text" }]], "ordered": true, "start": 1, "type": "list"}, {"content": [{"content": "else", "type": "text"}], "type": "paragraph"}]
//         expect(actual).toEqual(expected)
//     })
// })
